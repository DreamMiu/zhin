import{_ as c,E as e,o as r,c as i,k as p,J as s,w as a,U as o,a as n}from"./chunks/framework.587922bd.js";const q=JSON.parse('{"title":"安装 Zhin 机器人","description":"","frontmatter":{},"headers":[],"relativePath":"guide/start.md","filePath":"guide/start.md","lastUpdated":1689841244000}'),y={name:"guide/start.md"},C=o(`<h1 id="安装-zhin-机器人" tabindex="-1">安装 Zhin 机器人 <a class="header-anchor" href="#安装-zhin-机器人" aria-label="Permalink to &quot;安装 Zhin 机器人&quot;">​</a></h1><p>::: tip阅读本节前，请确认你已正确配置 <a href="https://nodejs.org/zh-cn" target="_blank" rel="noreferrer">Node.js</a> 环 境。:::</p><h2 id="创建项目-三选一" tabindex="-1">创建项目（三选一） <a class="header-anchor" href="#创建项目-三选一" aria-label="Permalink to &quot;创建项目（三选一）&quot;">​</a></h2><h3 id="_1-通过-cli-指令创建" tabindex="-1">1. 通过 cli 指令创建 <a class="header-anchor" href="#_1-通过-cli-指令创建" aria-label="Permalink to &quot;1. 通过 cli 指令创建&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装 Zhin cli</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@zhinjs/cli</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 通过 Zhin 的 cli 初始化项目</span></span>
<span class="line"><span style="color:#FFCB6B;">zhin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zhin-bot</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># \`zhin-bot\` 为你需要创建的项目名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装依赖</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zhin-bot</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span></code></pre></div><h3 id="_2-通过-npm-指令创建" tabindex="-1">2. 通过 npm 指令创建 <a class="header-anchor" href="#_2-通过-npm-指令创建" aria-label="Permalink to &quot;2. 通过 npm 指令创建&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 直接使用 npm 命令初始化一个 Zhin 项目，然后根据操作引导即可</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zhin</span></span></code></pre></div><h3 id="_3-通过模板仓库创建" tabindex="-1">3. 通过模板仓库创建 <a class="header-anchor" href="#_3-通过模板仓库创建" aria-label="Permalink to &quot;3. 通过模板仓库创建&quot;">​</a></h3><p>::: tip此方式需要你：</p><ul><li>能自行解决国内 GitHub 访问受限的问题</li><li>有自己的 GitHub 账号</li><li>电脑已安装 <code>Git</code> 代码版本管理工具 :::</li></ul><ol><li><p>前往<a href="https://github.com/zhinjs/boilerplate" target="_blank" rel="noreferrer">模板仓库</a>，点击 <code>Use this template</code> 按钮创建一个新的仓库</p></li><li><p>使用 <code>git</code> 命令拉取 GitHub 仓库的代码到本地，并安装依赖</p></li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 拉取仓库代码</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://gitbub.com/[你的github用户名]/[仓库名].git</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装依赖</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> [仓库名] </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span></code></pre></div><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h2><p>构建完成后，我们可在项目文件夹下看到如下结构</p><div class="language-tex"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ data/              资源目录</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ plugins/           插件目录（存放编写好的插件）</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ zhin.yaml          配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ node_modules/      项目依赖存放文件(npm自动生成，开发者无需关心)</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ package.json       项目描述文件(一般情况下无需关心)</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ package-lock.json  项目依赖描述文件(npm自动生成，开发者无需关心)</span></span></code></pre></div>`,15),D={class:"tip custom-block"},A=o(`<p class="custom-block-title"><code>node_modules</code>、<code>package.json</code> 等都是由 npm 生成的，<strong>仅开发者</strong>需要了</p><p>解，可参考 <a href="/plugin/start.html">插件开发</a> 一节。:::</p><h2 id="添加第一个-bot" tabindex="-1">添加第一个 Bot <a class="header-anchor" href="#添加第一个-bot" aria-label="Permalink to &quot;添加第一个 Bot&quot;">​</a></h2><p>默认情况下，Zhin 没有任何机器人账号，我们需要手动配置后，才能正常使用。</p><p>如果你是使用 cli 创建的， Zhin 已经引导你完成了第一个账号的配置，可以跳过当前步 骤。</p><p>打开配置文件 <code>zhin.yaml</code>，并增加你的机器人信息。</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#F07178;">adapters</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">icqq</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 指定使用 icqq 适配器</span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">bots</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">bots</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">self_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12345678</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 机器人账号 </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">platform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 指定 qq 登录平台为 iPad （可不配置  1：安卓  2：安卓平板  3：手表  4：苹果电脑  5：苹果平板） </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">password</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">abcdefg</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 账号密码 (不配置则使用扫码登录) </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 指令调用前缀，可不配置 </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">master</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12345678</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 机器人主人账号 (拥有完整操作该机器人的权限，可不配置) </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">admins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 机器人管理员账号(可不配置) </span></span>
<span class="line"><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">daemon</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">help</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">login</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">logs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">status</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">watcher</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/path/to/zhin-bot</span></span>
<span class="line"><span style="color:#F07178;">log_level</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">info</span></span>
<span class="line"><span style="color:#F07178;">plugin_dir</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">plugins</span></span>
<span class="line"><span style="color:#F07178;">data_dir</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">data</span></span>
<span class="line"><span style="color:#F07178;">delay</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">prompt</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60000</span></span></code></pre></div>`,7),d={class:"tip custom-block"},h=o(`<p class="custom-block-title">有关 Zhin 的详细配置说明，请前往 <a href="/config/common.html">配置</a> 章节。:::</p><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><p>一切准备就绪，开始启动你的项目吧。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> [你的项目目录]</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start:zhin</span></span></code></pre></div><p>如上述步骤无误，根据控制台的提示扫码或输入密码即可成功登录。</p><p>账号登录成功后，会在根目录下的 <code>data</code> 自动生成账号的缓存及相关配置文件。</p><h2 id="测试一下" tabindex="-1">测试一下 <a class="header-anchor" href="#测试一下" aria-label="Permalink to &quot;测试一下&quot;">​</a></h2><p>正常启动后，往机器人发送第一条消息，测试一下是否正常吧</p>`,8),F=p("br",null,null,-1);function u(_,m,f,g,b,E){const l=e("ChatMsg"),t=e("ChatHistory");return r(),i("div",null,[C,p("div",D,[A,p("div",d,[h,s(t,null,{default:a(()=>[s(l,{id:"1659488338"},{default:a(()=>[n("help")]),_:1}),s(l,{id:"1689919782"},{default:a(()=>[n(" help [command:string] 查看某个指令的帮助文档"),F,n(" output <msg:any>回复“帮助 指令名”以查看对应指令帮助。 ")]),_:1}),s(l,{id:"1659488338"},{default:a(()=>[n("output hello world")]),_:1}),s(l,{id:"1689919782"},{default:a(()=>[n("hello world")]),_:1})]),_:1})])])])}const v=c(y,[["render",u]]);export{q as __pageData,v as default};
