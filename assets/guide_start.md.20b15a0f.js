import{_ as e,c as t,e as s,w as a,a as c,r as p,o as r,d as n,b as i}from"./app.1d8f4807.js";const b=JSON.parse('{"title":"安装","description":"","frontmatter":{},"headers":[{"level":2,"title":"项目构建(三选一)","slug":"项目构建-三选一","link":"#项目构建-三选一","children":[{"level":3,"title":"1. 通过cli指令构建","slug":"_1-通过cli指令构建","link":"#_1-通过cli指令构建","children":[]},{"level":3,"title":"2. 通过npm指令构建","slug":"_2-通过npm指令构建","link":"#_2-通过npm指令构建","children":[]},{"level":3,"title":"3. 通过模板仓库构建","slug":"_3-通过模板仓库构建","link":"#_3-通过模板仓库构建","children":[]}]},{"level":2,"title":"项目结构","slug":"项目结构","link":"#项目结构","children":[]},{"level":2,"title":"添加第一个bot","slug":"添加第一个bot","link":"#添加第一个bot","children":[]},{"level":2,"title":"启动","slug":"启动","link":"#启动","children":[]},{"level":2,"title":"测试一下","slug":"测试一下","link":"#测试一下","children":[]}],"relativePath":"guide/start.md","lastUpdated":1677491574000}'),y={name:"guide/start.md"},C=c(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>阅读本节前，请确认你以完成<a href="/zhin/guide/prepare.html">准备工作</a></p></div><h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h1><h2 id="项目构建-三选一" tabindex="-1">项目构建(三选一) <a class="header-anchor" href="#项目构建-三选一" aria-hidden="true">#</a></h2><h3 id="_1-通过cli指令构建" tabindex="-1">1. 通过cli指令构建 <a class="header-anchor" href="#_1-通过cli指令构建" aria-hidden="true">#</a></h3><ol><li>全局安装<code>@zhinjs/cli</code></li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装zhin cli</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@zhinjs/cli</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 通过cli初始化项目</span></span>
<span class="line"><span style="color:#FFCB6B;">zhin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zhin-bot</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># \`zhin-bot\`为你需要创建的项目名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装依赖</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zhin-bot</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="_2-通过npm指令构建" tabindex="-1">2. 通过npm指令构建 <a class="header-anchor" href="#_2-通过npm指令构建" aria-hidden="true">#</a></h3><ol><li>直接使用npm命令初始化一个zhin项目</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zhin</span></span>
<span class="line"></span></code></pre></div><p>然后根据操作引导即可</p><h3 id="_3-通过模板仓库构建" tabindex="-1">3. 通过模板仓库构建 <a class="header-anchor" href="#_3-通过模板仓库构建" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>此方式需要你能自行解决国内github访问受限的问题</p><p>此方式需要你有自己的github账号</p><p>此方式需要你电脑已安装<code>Git</code>代码版本管理工具</p></div><ol><li><a href="https://github.com/zhinjs/boilerplate" target="_blank" rel="noreferrer">点击此处</a>前往模板仓库，点击<code>Use this template</code>选项，根据模板仓库创建一个属于自己的代码仓库</li><li>使用<code>git</code>命令拉取仓库代码并安装依赖</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 拉取仓库代码</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://gitbub.com/[你的github用户名]/[仓库名].git</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装依赖</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">仓库名</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-hidden="true">#</a></h2><p>构建完成后，我们可在项目文件夹下看到如下结构</p><div class="language-tex"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ data/              资源目录</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ plugins/           插件目录（存放编写好的插件）</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ zhin.yaml          配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ node_modules/      项目依赖存放文件(npm自动生成，开发者无需关心)</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ package.json       项目描述文件(一般情况下无需关心)</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ package-lock.json  项目依赖描述文件(npm自动生成，开发者无需关心)</span></span>
<span class="line"></span></code></pre></div><p>其中例如 node_modules、package.json 等都是 npm 生成的，后面在<a href="/zhin/plugin/start.html">插件开发</a>中会讲到。</p><p>如果你不准备开发插件，就不用去关心这些 依赖文件，感兴趣你也可以先使用搜索引擎查找相关知识。</p><h2 id="添加第一个bot" tabindex="-1">添加第一个bot <a class="header-anchor" href="#添加第一个bot" aria-hidden="true">#</a></h2><p>默认zhin不会有任何机器人，我们需要手动添加机器人配置后，才能正常使用。</p><p>如果你是使用cli创建的， zhin已经引导你完成了第一个账号的配置，可以跳过当前步骤 打开配置文件<code>zhin.yaml</code>,并增加你的机器人信息</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight has-diff" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#F07178;">adapters</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">icqq</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 指定使用icqq适配器</span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">bots</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">bots</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">self_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">147258369</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 机器人账号 </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">platform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 指定qq登录平台为iPad（可不配置  1：安卓  2：安卓平板  3：手表  4：苹果电脑  5：苹果平板） </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">password</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">abcdefg</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 账号密码(不配置则使用扫码登录) </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 指令调用前缀，可不配置 </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">master</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1659488338</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 机器人主人账号(拥有完整操作该机器人的权限，可不配置) </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">admins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 机器人管理员账号(可不配置) </span></span>
<span class="line"><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">daemon</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">help</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">login</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">logs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">status</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">watcher</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/path/to/zhin-bot</span></span>
<span class="line"><span style="color:#F07178;">log_level</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">info</span></span>
<span class="line"><span style="color:#F07178;">plugin_dir</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">plugins</span></span>
<span class="line"><span style="color:#F07178;">data_dir</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">data</span></span>
<span class="line"><span style="color:#F07178;">delay</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">prompt</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60000</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>要了解zhin配置，请前往<a href="/zhin/config/common.html">配置</a></p></div><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-hidden="true">#</a></h2><p>一切准备就绪，开始启动你的项目吧。如果你是本地安装，就要使用<code>npx zhin start</code>启动项目。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">zhin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span></span>
<span class="line"></span></code></pre></div><p>如上述步骤无误，根据控制台的提示扫码或输入密码即可成功登录。 账号登录成功后，会在根目录下的<code>data</code>自动生成账号的缓存及相关配置文件。</p><h2 id="测试一下" tabindex="-1">测试一下 <a class="header-anchor" href="#测试一下" aria-hidden="true">#</a></h2><p>正常启动后，往机器人发送第一条消息，测试一下是否正常吧</p>`,30),d=i("br",null,null,-1);function D(A,h,F,u,m,g){const l=p("ChatMsg"),o=p("ChatHistory");return r(),t("div",null,[C,s(o,null,{default:a(()=>[s(l,{id:"1659488338"},{default:a(()=>[n("help")]),_:1}),s(l,{id:"1689919782"},{default:a(()=>[n(" help [command:string] 查看某个指令的帮助文档"),d,n(" output <msg:any>回复“帮助 指令名”以查看对应指令帮助。 ")]),_:1}),s(l,{id:"1659488338"},{default:a(()=>[n("output hello world")]),_:1}),s(l,{id:"1689919782"},{default:a(()=>[n("hello world")]),_:1})]),_:1})])}const _=e(y,[["render",D]]);export{b as __pageData,_ as default};
