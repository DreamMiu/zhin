import{_ as t,E as l,c as p,J as s,w as i,V as e,o as k,a,m as d}from"./chunks/framework.v-NpEqQ7.js";const A=JSON.parse('{"title":"安装 Zhin 机器人","description":"","frontmatter":{},"headers":[],"relativePath":"guide/start.md","filePath":"guide/start.md","lastUpdated":1689919324000}'),r={name:"guide/start.md"},c=e(`<h1 id="安装-zhin-机器人" tabindex="-1">安装 Zhin 机器人 <a class="header-anchor" href="#安装-zhin-机器人" aria-label="Permalink to &quot;安装 Zhin 机器人&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>阅读本节前，请确认你已正确配置 <a href="https://nodejs.org/zh-cn" target="_blank" rel="noreferrer">Node.js</a> 环境。</p></div><h2 id="创建项目-三选一" tabindex="-1">创建项目（三选一） <a class="header-anchor" href="#创建项目-三选一" aria-label="Permalink to &quot;创建项目（三选一）&quot;">​</a></h2><h3 id="_1-通过-cli-指令创建" tabindex="-1">1. 通过 cli 指令创建 <a class="header-anchor" href="#_1-通过-cli-指令创建" aria-label="Permalink to &quot;1. 通过 cli 指令创建&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 Zhin cli</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @zhinjs/cli</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过 Zhin 的 cli 初始化项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zhin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zhin-bot</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # \`zhin-bot\` 为你需要创建的项目名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zhin-bot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="_2-通过-npm-指令创建" tabindex="-1">2. 通过 npm 指令创建 <a class="header-anchor" href="#_2-通过-npm-指令创建" aria-label="Permalink to &quot;2. 通过 npm 指令创建&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 直接使用 npm 命令初始化一个 Zhin 项目，然后根据操作引导即可</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zhin</span></span></code></pre></div><h3 id="_3-通过模板仓库创建" tabindex="-1">3. 通过模板仓库创建 <a class="header-anchor" href="#_3-通过模板仓库创建" aria-label="Permalink to &quot;3. 通过模板仓库创建&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>此方式要求你：</p><ul><li>能自行解决国内 GitHub 访问受限的问题</li><li>有自己的 GitHub 账号</li><li>电脑已安装 <code>Git</code> 代码版本管理工具</li></ul></div><ol><li><p>前往<a href="https://github.com/zhinjs/boilerplate" target="_blank" rel="noreferrer">模板仓库</a>，点击 <code>Use this template</code> 按钮创建一个新的仓库</p></li><li><p>使用 <code>git</code> 命令拉取 GitHub 仓库的代码到本地，并安装依赖</p></li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拉取仓库代码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://gitbub.com/[你的github用户名]/[仓库名].git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [仓库名] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h2><p>构建完成后，我们可在项目文件夹下看到如下结构</p><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─ data/              资源目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─ plugins/           插件目录（存放编写好的插件）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─ zhin.yaml          配置文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─ node_modules/      项目依赖存放文件(npm自动生成，开发者无需关心)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─ package.json       项目描述文件(一般情况下无需关心)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">└─ package-lock.json  项目依赖描述文件(npm自动生成，开发者无需关心)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>node_modules</code>、<code>package.json</code> 等都是由 npm 生成的，<strong>仅开发者</strong>需要了解，可参考 <a href="/zhin/plugin/start.html">插件开发</a> 一节。</p></div><h2 id="添加第一个-bot" tabindex="-1">添加第一个 Bot <a class="header-anchor" href="#添加第一个-bot" aria-label="Permalink to &quot;添加第一个 Bot&quot;">​</a></h2><p>默认情况下，Zhin 没有任何机器人账号，我们需要手动配置后，才能正常使用。</p><p>如果你是使用 cli 创建的， Zhin 已经引导你完成了第一个账号的配置，可以跳过当前步 骤。</p><p>打开配置文件 <code>zhin.yaml</code>，并增加你的机器人信息。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">adapters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  icqq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定使用 icqq 适配器</span></span>
<span class="line diff remove"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    bots</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [] </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    bots</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">self_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12345678</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 机器人账号</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        platform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 指定 qq 登录平台为 iPad （可不配置  1：安卓  2：安卓平板  3：手表  4：苹果电脑  5：苹果平板）</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">abcdefg</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 账号密码 (不配置则使用扫码登录)</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 指令调用前缀，可不配置</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12345678</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 机器人主人账号 (拥有完整操作该机器人的权限，可不配置)</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        admins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 机器人管理员账号(可不配置)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  daemon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  help</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  login</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  logs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  watcher</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/to/zhin-bot</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">log_level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">info</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugin_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">plugins</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">data_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">data</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60000</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>有关 Zhin 的详细配置说明，请前往 <a href="/zhin/config/common.html">配置</a> 章节。</p></div><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><p>一切准备就绪，开始启动你的项目吧。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [你的项目目录]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start:zhin</span></span></code></pre></div><p>如上述步骤无误，根据控制台的提示扫码或输入密码即可成功登录。</p><p>账号登录成功后，会在根目录下的 <code>data</code> 自动生成账号的缓存及相关配置文件。</p><h2 id="测试一下" tabindex="-1">测试一下 <a class="header-anchor" href="#测试一下" aria-label="Permalink to &quot;测试一下&quot;">​</a></h2><p>正常启动后，往机器人发送第一条消息，测试一下是否正常吧</p>`,28),o=d("br",null,null,-1);function E(g,y,u,F,m,C){const n=l("ChatMsg"),h=l("ChatHistory");return k(),p("div",null,[c,s(h,null,{default:i(()=>[s(n,{id:"1659488338"},{default:i(()=>[a("help")]),_:1}),s(n,{id:"1689919782"},{default:i(()=>[a(" help [command:string] 查看某个指令的帮助文档"),o,a(" output <msg:any>回复“帮助 指令名”以查看对应指令帮助。 ")]),_:1}),s(n,{id:"1659488338"},{default:i(()=>[a("output hello world")]),_:1}),s(n,{id:"1689919782"},{default:i(()=>[a("hello world")]),_:1})]),_:1})])}const D=t(r,[["render",E]]);export{A as __pageData,D as default};
