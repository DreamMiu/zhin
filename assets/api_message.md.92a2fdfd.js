import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.cd0f4a06.js";const u=JSON.parse('{"title":"消息定义","description":"","frontmatter":{},"headers":[],"relativePath":"api/message.md","filePath":"api/message.md","lastUpdated":1689841244000}'),l={name:"api/message.md"},o=p(`<h1 id="消息定义" tabindex="-1">消息定义 <a class="header-anchor" href="#消息定义" aria-label="Permalink to &quot;消息定义&quot;">​</a></h1><p>zhin中的消息分为普通文本消息、消息元素、消息模板和消息组件构成。</p><h2 id="普通文本消息" tabindex="-1">普通文本消息 <a class="header-anchor" href="#普通文本消息" aria-label="Permalink to &quot;普通文本消息&quot;">​</a></h2><p>普通文本消息是指不包含任何消息元素的字符串。你可以通过session.reply方法来发送普 通文本消息。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">session.</span><span style="color:#B392F0;">reply</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello World!&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">session.</span><span style="color:#6F42C1;">reply</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello World!&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="消息元素" tabindex="-1">消息元素 <a class="header-anchor" href="#消息元素" aria-label="Permalink to &quot;消息元素&quot;">​</a></h2><p>消息元素是指消息中的一些特殊元素，例如图片、链接、at等。你可以通过导入zhin提供 的<code>h</code>来构造，通过session.reply方法来发送消息元素。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { h } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;zhin&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">session.</span><span style="color:#B392F0;">reply</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">h</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;mention&quot;</span><span style="color:#E1E4E8;">, { user_id: </span><span style="color:#79B8FF;">123456789</span><span style="color:#E1E4E8;"> })); </span><span style="color:#6A737D;">// 提及某人</span></span>
<span class="line"><span style="color:#E1E4E8;">session.</span><span style="color:#B392F0;">reply</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">h</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;image&quot;</span><span style="color:#E1E4E8;">, { url: </span><span style="color:#9ECBFF;">&quot;https://example.com/image.png&quot;</span><span style="color:#E1E4E8;"> })); </span><span style="color:#6A737D;">// 发送图片</span></span>
<span class="line"><span style="color:#E1E4E8;">session.</span><span style="color:#B392F0;">reply</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">h</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;face&quot;</span><span style="color:#E1E4E8;">, { id: </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;"> })); </span><span style="color:#6A737D;">// 发送表情</span></span>
<span class="line"><span style="color:#E1E4E8;">session.</span><span style="color:#B392F0;">reply</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">h</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;rps&quot;</span><span style="color:#E1E4E8;">, { id: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> })); </span><span style="color:#6A737D;">// 发送猜拳</span></span>
<span class="line"><span style="color:#E1E4E8;">session.</span><span style="color:#B392F0;">reply</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">h</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dice&quot;</span><span style="color:#E1E4E8;">, { id: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> })); </span><span style="color:#6A737D;">// 发送骰子</span></span>
<span class="line"><span style="color:#E1E4E8;">session.</span><span style="color:#B392F0;">reply</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">h</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;node&quot;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    message: [</span><span style="color:#9ECBFF;">&quot;Hello World!&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">h</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;mention&quot;</span><span style="color:#E1E4E8;">, { user_id: </span><span style="color:#79B8FF;">123456789</span><span style="color:#E1E4E8;"> })],</span></span>
<span class="line"><span style="color:#E1E4E8;">  }),</span></span>
<span class="line"><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 发送节点</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { h } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;zhin&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">session.</span><span style="color:#6F42C1;">reply</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">h</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;mention&quot;</span><span style="color:#24292E;">, { user_id: </span><span style="color:#005CC5;">123456789</span><span style="color:#24292E;"> })); </span><span style="color:#6A737D;">// 提及某人</span></span>
<span class="line"><span style="color:#24292E;">session.</span><span style="color:#6F42C1;">reply</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">h</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;image&quot;</span><span style="color:#24292E;">, { url: </span><span style="color:#032F62;">&quot;https://example.com/image.png&quot;</span><span style="color:#24292E;"> })); </span><span style="color:#6A737D;">// 发送图片</span></span>
<span class="line"><span style="color:#24292E;">session.</span><span style="color:#6F42C1;">reply</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">h</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;face&quot;</span><span style="color:#24292E;">, { id: </span><span style="color:#005CC5;">123</span><span style="color:#24292E;"> })); </span><span style="color:#6A737D;">// 发送表情</span></span>
<span class="line"><span style="color:#24292E;">session.</span><span style="color:#6F42C1;">reply</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">h</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;rps&quot;</span><span style="color:#24292E;">, { id: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> })); </span><span style="color:#6A737D;">// 发送猜拳</span></span>
<span class="line"><span style="color:#24292E;">session.</span><span style="color:#6F42C1;">reply</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">h</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dice&quot;</span><span style="color:#24292E;">, { id: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> })); </span><span style="color:#6A737D;">// 发送骰子</span></span>
<span class="line"><span style="color:#24292E;">session.</span><span style="color:#6F42C1;">reply</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">h</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;node&quot;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">    message: [</span><span style="color:#032F62;">&quot;Hello World!&quot;</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">h</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;mention&quot;</span><span style="color:#24292E;">, { user_id: </span><span style="color:#005CC5;">123456789</span><span style="color:#24292E;"> })],</span></span>
<span class="line"><span style="color:#24292E;">  }),</span></span>
<span class="line"><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 发送节点</span></span></code></pre></div><h2 id="消息模板" tabindex="-1">消息模板 <a class="header-anchor" href="#消息模板" aria-label="Permalink to &quot;消息模板&quot;">​</a></h2><p>消息模板是一种特殊的文本消息，在其中你可以通过类html的方式来构造消息元素。你可以 通过session.reply方法来发送消息模板。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">session.</span><span style="color:#B392F0;">reply</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;Hello World!&lt;face id=&quot;123&quot;/&gt;&lt;mention user_id=&quot;123456789&quot;/&gt;&lt;image url=&quot;https://example.com/image.png&quot;/&gt;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">session.</span><span style="color:#6F42C1;">reply</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;Hello World!&lt;face id=&quot;123&quot;/&gt;&lt;mention user_id=&quot;123456789&quot;/&gt;&lt;image url=&quot;https://example.com/image.png&quot;/&gt;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="消息组件" tabindex="-1">消息组件 <a class="header-anchor" href="#消息组件" aria-label="Permalink to &quot;消息组件&quot;">​</a></h2><p>消息组件是由开发者自定义的消息元素，你可以通过ctx.component来注册消息组件，通过 session.reply方法来发送消息组件。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { defineComponent } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;zhin&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">component</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;my-component&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">defineComponent</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    props: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      who: String,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">props</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`Hello \${</span><span style="color:#E1E4E8;">props</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">who</span><span style="color:#9ECBFF;">}!\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  }),</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">middleware</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">session</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">next</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  session.</span><span style="color:#B392F0;">reply</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`&lt;my-component who=&quot;World&quot;/&gt;\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { defineComponent } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;zhin&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">component</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;my-component&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">defineComponent</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    props: {</span></span>
<span class="line"><span style="color:#24292E;">      who: String,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">(</span><span style="color:#E36209;">props</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`Hello \${</span><span style="color:#24292E;">props</span><span style="color:#032F62;">.</span><span style="color:#24292E;">who</span><span style="color:#032F62;">}!\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  }),</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">middleware</span><span style="color:#24292E;">((</span><span style="color:#E36209;">session</span><span style="color:#24292E;">, </span><span style="color:#E36209;">next</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  session.</span><span style="color:#6F42C1;">reply</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`&lt;my-component who=&quot;World&quot;/&gt;\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div>`,14),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const h=s(l,[["render",t]]);export{u as __pageData,h as default};
